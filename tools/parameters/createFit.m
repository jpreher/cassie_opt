function [fitresult, gof] = createFit(tau, q1, titleName, figH)
%CREATEFIT(TAU,Q1)
%  Create a fit to a 7-th order Bezier polynomial.
%
%  Data for 'bezier' fit:
%      X Input : tau
%      Y Output: q1
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 09-Sep-2017 01:23:00. -Wma


%% Fit: 'bezier'.
[xData, yData] = prepareCurveData( tau, q1 );

% Set up fittype and options.
ft = fittype( 'a1*(1-x)^6 + 6*a2*(1-x)^5 * x +  15*a3*(1-x)^4 * x^2 +  20*a4*(1-x)^3 * x^3 +  15*a5*(1-x)^2 * x^4 +  6*a6*(1-x)*x^5 +  a7* x^6;', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.957506835434298 0.964888535199277 0.157613081677548 0.970592781760616 0.957166948242946 0.485375648722841 0.8002804688888];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure(figH)
% figure( 'Name', 'bezier' );
h = plot( fitresult, xData, yData );
legend( h, 'q1 vs. tau', 'bezier', 'Location', 'NorthEast' );
% Label axes
xlabel tau
ylabel q1
grid on
title(titleName)

